################################################################################
# MIT License
#
# Copyright (c) 2017-2018 Mathieu-Andr√© Chiasson
# All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# 1. The above copyright notice and this permission notice shall be included in
#    all copies or substantial portions of the Software.
#
# Disclaimer:
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
################################################################################

cmake_minimum_required(VERSION 3.0)

set(CMAKE_CXX_STANDARD 11)

if(NOT EMSCRIPTEN)
    include(cmake/HunterGate.cmake)
    HunterGate(
        URL "https://github.com/ruslo/hunter/archive/v0.23.11.tar.gz"
        SHA1 "b732407d782459f89950ab52bc0ff9612f3e4be2"
        LOCAL # <----- Use cmake/Hunter/config.cmake
    )

    project(GLBrebis)

    ################################################################################
    # OpenSSL / Crypto Libraries
    ################################################################################
    hunter_add_package(OpenSSL)
    find_package(OpenSSL REQUIRED)

    ################################################################################
    # Poco C++ Libraries
    ################################################################################
    hunter_add_package(PocoCpp)
    find_package(Poco REQUIRED Foundation JSON Net NetSSL Crypto Util Zip CONFIG)

    ################################################################################
    # RapidXML
    ################################################################################
    hunter_add_package(RapidXML)
    find_package(RapidXML REQUIRED CONFIG)

    ################################################################################
    # GLBrebis Console App
    ################################################################################

    if (NOT EXISTS ${GLBrebis_SOURCE_DIR}/xml/gl.xml)
        message(STATUS "Downloading xml/gl.xml ...")
        file(DOWNLOAD https://raw.githubusercontent.com/KhronosGroup/OpenGL-Registry/master/xml/gl.xml ${GLBrebis_SOURCE_DIR}/xml/gl.xml)
    endif()

    if (NOT EXISTS ${GLBrebis_SOURCE_DIR}/KHR/khrplatform.h)
        message(STATUS "Downloading KHR/khrplatform.h ...")
        file(DOWNLOAD https://raw.githubusercontent.com/KhronosGroup/EGL-Registry/master/api/KHR/khrplatform.h ${GLBrebis_SOURCE_DIR}/KHR/khrplatform.h)
    endif()

    function(EmbedResource RESOURCE)
        get_filename_component(RESOURCE_WORKSPACE ${RESOURCE} DIRECTORY)
        add_custom_command(
            OUTPUT
                ${RESOURCE}.c
                ${RESOURCE}.h
            COMMAND ${CMAKE_COMMAND}
                -Dresource=${RESOURCE}
                -P ${GLBrebis_SOURCE_DIR}/cmake/EmbedResource.cmake
            WORKING_DIRECTORY
                ${RESOURCE_WORKSPACE}
            MAIN_DEPENDENCY
                ${RESOURCE}
        )
        set_source_files_properties(${RESOURCE}.c PROPERTIES GENERATED TRUE)
        set_source_files_properties(${RESOURCE}.h PROPERTIES GENERATED TRUE)
    endfunction()

    EmbedResource(${GLBrebis_SOURCE_DIR}/xml/gl.xml)
    EmbedResource(${GLBrebis_SOURCE_DIR}/xml/extra.xml)
    EmbedResource(${GLBrebis_SOURCE_DIR}/template/GL.c.template)
    EmbedResource(${GLBrebis_SOURCE_DIR}/template/GL.h.template)
    EmbedResource(${GLBrebis_SOURCE_DIR}/KHR/khrplatform.h)

    set(CMAKE_INCLUDE_CURRENT_DIR ON)

    add_library(GLBrebisLib STATIC
        src/GLBrebisCodeGenerator.cpp
        src/GLBrebisData.cpp
        src/GLBrebisParser.cpp
        src/GLBrebisUtilities.cpp
        template/GL.c.template.c #generated by EmbedResource.cmake
        template/GL.h.template.c #generated by EmbedResource.cmake
        KHR/khrplatform.h.c #generated by EmbedResource.cmake
        xml/gl.xml.c #generated by EmbedResource.cmake
        xml/extra.xml.c #generated by EmbedResource.cmake
    )

    target_link_libraries(GLBrebisLib
        PUBLIC
            RapidXML::RapidXML
            Poco::NetSSL
            Poco::Net
            Poco::Zip
            Poco::Foundation
            OpenSSL::SSL
            OpenSSL::Crypto
    )

    add_executable(GLBrebis src/GLBrebisApp.cpp)
    target_link_libraries(GLBrebis GLBrebisLib)

    add_executable(GLBrebisService
        src/GLBrebisService.cpp
        src/GLBrebisHTTPDefaultRequestHandler.cpp
        src/GLBrebisHTTPRequestHandlerFactory.cpp
    )
    target_link_libraries(GLBrebisService GLBrebisLib)


endif()

################################################################################
# GLBrebis Example App
################################################################################
add_subdirectory(example)
